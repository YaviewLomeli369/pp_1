Objetivo: Diagnosticar y resolver completamente todos los problemas que impiden que las imágenes se suban correctamente, que tempImageUrl tenga la URL correcta y que el preview funcione sin errores.

Instrucciones detalladas para el asistente:

Revisar los logs del backend y del frontend:

Inspeccionar la respuesta completa de /api/objects/upload en la consola del navegador y en los logs del servidor.

Loggear todo el objeto result que entrega Uppy en handleUploadComplete.

Confirmar qué campos contienen la URL final (response.url, uploadURL, response.body).

Validar la respuesta del backend:

Confirmar que la URL que se devuelve después de la subida sea absoluta y funcional.

Si uploadURL es relativo (/api/objects/direct-upload/...), NO usarlo como URL final.

Comprobar que el backend siempre devuelva { success: true, url: "URL_ABSOLUTA" } después de guardar el archivo.

Si hay campos como relativePath o name, asegurarse de que no se usen directamente como URL final.

Diagnosticar handleUploadComplete en frontend:

Revisar paso a paso cómo se extrae la URL: uploadedFile.response.url → uploadedFile.uploadURL → response.body.

Loggear cada valor y validar que sea absoluto y válido.

Identificar si algún fallback falla y causa Invalid URL.

Verificar tempImageUrl:

Confirmar que siempre contenga una URL absoluta después de la subida.

Probar el preview inmediatamente después de la subida, antes de enviar el formulario.

Registrar logs si la URL es inválida o vacía.

Probar subida de diferentes tipos de archivo:

JPEG, PNG, AVIF, GIF.

Revisar si algún tipo genera errores de URL inválida.

Verificar flujo de productos:

Crear un producto nuevo con imagen subida.

Editar un producto existente y cambiar la imagen.

Confirmar que la URL correcta se envía al backend y se guarda en la base de datos.

Revisar la mutación createProductMutation y updateProductImageMutation para asegurar que reciben la URL correcta.

Validación final:

URL obtenida debe ser absoluta o relativa funcional en nuestro dominio.

El preview debe mostrarse correctamente.

No debe aparecer "Failed to construct 'URL': Invalid URL".

Documentar resultados de cada paso:

Mostrar en la consola: URL final, objeto completo de upload, errores detectados.

Identificar exactamente en qué punto falla y por qué.

Resultado esperado:

Subida de imágenes sin errores.

tempImageUrl contiene URL correcta.

Preview funciona inmediatamente.

Productos nuevos y existentes reciben la URL correcta en el backend.

Este mensaje obliga al asistente a diagnosticar cada posibilidad y validar cada paso, en lugar de solo aplicar correcciones superficiales.