Objetivo: Resolver de manera definitiva el error "Failed to construct 'URL': Invalid URL" al subir imágenes en el admin store, asegurando que tempImageUrl contenga la URL correcta y que el preview funcione correctamente.

Pasos a seguir, de manera precisa y paso a paso:

Revisar y corregir handleUploadComplete en el frontend (store.tsx o componente correspondiente):

a. Priorizar siempre uploadedFile.response.url como la URL final de la imagen.
b. Nunca usar directamente uploadedFile.uploadURL si es relativo (por ejemplo: /api/objects/direct-upload/...), solo usarlo si es una URL absoluta (includes('://')).
c. Como último recurso, parsear uploadedFile.response.body buscando claves como url, uploadURL o Location, validando que sea absoluta.
d. Validar que la URL obtenida tenga formato correcto antes de guardarla:

if (!imageURL.includes('://') && !imageURL.startsWith('/')) {
  throw new Error("Invalid URL");
}


e. Loggear en consola todo uploadedFile y las URLs detectadas para debug.

Actualizar la función para manejar correctamente el flujo de productos:

a. Para productos nuevos: si tempImageUrl está definido, incluirlo en el payload de createProductMutation.
b. Para productos existentes: usar updateProductImageMutation solo con la URL absoluta correcta.
c. Asegurarse de que tempImageUrl nunca reciba un path relativo ni una URL inválida.

Revisar backend /api/objects/upload:

a. Verificar que el endpoint retorne siempre una URL absoluta válida (response.url) después de subir la imagen.
b. Confirmar que uploadURL que devuelve sea solo para que Uppy haga el POST, no para usar como URL final de la imagen.
c. Mantener consistencia: el response siempre debe tener success: true y url absoluto.

Agregar logging exhaustivo para debug:

Loggear result.successful[0] completo.

Loggear response.url, uploadURL, response.body parseado.

Mostrar cualquier error backend reportado (success: false o message).

Validación final antes de usar la URL:

Revisar que imageURL sea string.

Revisar que imageURL sea absoluta o relativa a nuestro dominio y funcional.

Si no es válida, mostrar toast de error y log en consola con todo el objeto uploadedFile.

Probar paso a paso:

a. Subir una imagen pequeña estándar (JPEG o PNG).
b. Revisar logs del navegador y del backend.
c. Confirmar que tempImageUrl contiene la URL absoluta correcta y que el preview se muestra.
d. Confirmar que al guardar el producto, la imagen se asocia correctamente.

Resultado esperado:

El error "Failed to construct 'URL': Invalid URL" ya no aparece.

tempImageUrl contiene una URL válida y absoluta.

El preview de la imagen funciona correctamente.

Tanto la creación como la edición de productos asocian la imagen correctamente en la base de datos.